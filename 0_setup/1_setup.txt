
# Download the Model Artefact (https://docs.databricks.com/data/filestore.html)

https://community.cloud.databricks.com/files/ModelProjects/Boston_ML/lrModel.zip?o=5798411837794065

#Clone the repo
git clone https://github.com/IvanNardini/Databricks_MLflow_GCP.git

# Build spark image
docker build -t ivnard/jupeterlab-sparkme .

# Run Jupyter Container
docker run -p 10000:8888 -v "$PWD":/home/jovyan/work jupyter/engineering-pyspark

###
How to install mleap on docker image
###

docker run -d -p 10000:8888 -e GRANT_SUDO=yes --user root  --name test -v /home/ubuntu/Databricks_MLflow_GCP:/home/jovyan/work ivnard/jupeterlab-sparkme

docker exec -it test sh

spark-shell --packages ml.combust.mleap:mleap-spark_2.11:0.15.0
ls /root/.ivy2/jars
cp -r /root/.ivy2/jars /usr/local/spark/jars
mv /root/.ivy2/jars/*.jar /usr/local/spark/jars/
ls -ltra /usr/local/spark/jars

## Mlflow

docker container run --name mlflow --publish 5000:5000 -it in92/py37 bash

pip install mlflow

pip install scikit-learn

#install conda

git clone https://github.com/mlflow/mlflow

cd mlflow/examples 

mlflow server --host 0.0.0.0

cd /mlflow/examples/sklearn_elasticnet_wine 

python train.py 1 0.5

python train.py 0.5 0.5

python train.py 0.5 1

--------------------------------
--------------------------------
--------------------------------

# On GCP

https://stackoverflow.com/questions/58769692/how-to-add-jar-dependency-to-dataproc-cluster-in-gcp

POST /v1/projects/gel-sassandbox/regions/europe-north1/jobs:submit/
{
  "projectId": "gel-sassandbox",
  "job": {
    "placement": {
      "clusterName": "cluster-10fc"
    },
    "reference": {
      "jobId": "job-2e8d112e"
    },
    "pysparkJob": {
      "mainPythonFileUri": "gs://cloud-demo-databrick-gcp/2_model/score.py",
      "args": [
        "--input gs://cloud-demo-databrick-gcp/1_data/boston_house_prices_toscore.csv",
        "--model gs://cloud-demo-databrick-gcp/2_model/Boston_lrModel_mleap.zip",
        "--output gs://cloud-demo-databrick-gcp/1_data/boston_house_prices_scored.csv"
      ]
    }
  }
}




